{"ast":null,"code":"import { ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { Devices } from '../models/devices';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../device.service\";\nimport * as i2 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nconst _c0 = [\"change\"];\n\nfunction DevicesComponentComponent_tr_12_ng_template_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵelementStart(1, \"h4\", 9);\n    i0.ɵɵtext(2, \"Change Phone Number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function DevicesComponentComponent_tr_12_ng_template_9_Template_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const modal_r4 = restoredCtx.$implicit;\n      return modal_r4.dismiss(\"Cross click\");\n    });\n    i0.ɵɵelementStart(4, \"span\", 11);\n    i0.ɵɵtext(5, \"\\u00D7\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 12);\n    i0.ɵɵelementStart(7, \"form\");\n    i0.ɵɵelementStart(8, \"div\", 13);\n    i0.ɵɵelementStart(9, \"label\", 14);\n    i0.ɵɵtext(10, \"Device ID\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 15);\n    i0.ɵɵelementStart(12, \"input\", 16);\n    i0.ɵɵlistener(\"ngModelChange\", function DevicesComponentComponent_tr_12_ng_template_9_Template_input_ngModelChange_12_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const device_r1 = i0.ɵɵnextContext().$implicit;\n      return device_r1.deviceId = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"label\", 17);\n    i0.ɵɵtext(14, \"Phone Number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"div\", 15);\n    i0.ɵɵelementStart(16, \"input\", 18, 19);\n    i0.ɵɵlistener(\"ngModelChange\", function DevicesComponentComponent_tr_12_ng_template_9_Template_input_ngModelChange_16_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const device_r1 = i0.ɵɵnextContext().$implicit;\n      return device_r1.deviceNumber = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"div\", 20);\n    i0.ɵɵelementStart(19, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function DevicesComponentComponent_tr_12_ng_template_9_Template_button_click_19_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const device_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.delete(device_r1.planId);\n    });\n    i0.ɵɵtext(20, \"Delete\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function DevicesComponentComponent_tr_12_ng_template_9_Template_button_click_21_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const device_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r14 = i0.ɵɵnextContext();\n      return ctx_r14.update(device_r1.deviceId, device_r1.deviceNumber);\n    });\n    i0.ɵɵtext(22, \"Save\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function DevicesComponentComponent_tr_12_ng_template_9_Template_button_click_23_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const device_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r16 = i0.ɵɵnextContext();\n      return ctx_r16.Random(device_r1.deviceId);\n    });\n    i0.ɵɵtext(24, \"Random Phone Number \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const device_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(12);\n    i0.ɵɵproperty(\"ngModel\", device_r1.deviceId)(\"readonly\", true);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", device_r1.deviceNumber);\n  }\n}\n\nfunction DevicesComponentComponent_tr_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵelementStart(6, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function DevicesComponentComponent_tr_12_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r20);\n\n      const _r2 = i0.ɵɵreference(10);\n\n      const ctx_r19 = i0.ɵɵnextContext();\n      return ctx_r19.open(_r2);\n    });\n    i0.ɵɵelement(7, \"i\", 6);\n    i0.ɵɵtext(8, \" Edit \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(9, DevicesComponentComponent_tr_12_ng_template_9_Template, 25, 3, \"ng-template\", null, 7, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const device_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(device_r1.deviceId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(device_r1.deviceNumber);\n  }\n}\n\nexport let DevicesComponentComponent = /*#__PURE__*/(() => {\n  class DevicesComponentComponent {\n    constructor(service, modalService) {\n      this.service = service;\n      this.modalService = modalService;\n      this.deviceNumber = '';\n      this.closeResult = '';\n      this.deviceList = [];\n      this.device = new Devices();\n      this.deletedDevice = {\n        planId: this.device.planId\n      };\n      this.updatedDevice = {\n        deviceId: this.device.deviceId,\n        deviceNumber: this.device.deviceNumber\n      };\n      this.rnd = '';\n    }\n\n    ngOnInit() {\n      this.service.findAll().subscribe(data => {\n        this.deviceList = data;\n        console.log(this.deviceList);\n      });\n    }\n\n    open(EditDevice) {\n      this.modalService.open(EditDevice, {\n        ariaLabelledBy: 'modal-basic-title'\n      }).result.then(result => {\n        this.closeResult = `Closed with: ${result}`;\n      }, reason => {\n        this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n      });\n    }\n\n    getDismissReason(reason) {\n      if (reason === ModalDismissReasons.ESC) {\n        return 'by pressing ESC';\n      } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n        return 'by clicking on a backdrop';\n      } else {\n        return `with: ${reason}`;\n      }\n    } // delete()\n\n\n    delete(planId) {\n      this.deletedDevice.planId = planId;\n      console.log(planId);\n      this.service.deleteDevice(this.deletedDevice).subscribe(result => {\n        console.log(result);\n      });\n      this.modalService.dismissAll(\"Deleted Plan!\");\n    }\n\n    update(deviceId, deviceNumber) {\n      this.updatedDevice.deviceId = deviceId;\n      this.updatedDevice.deviceNumber = deviceNumber;\n      this.service.updatePhoneNumber(this.updatedDevice).subscribe(result => {\n        console.log(result);\n      });\n      this.modalService.dismissAll(\"Updated!\"); // closes the form after submitting, and updates the table \n    }\n\n    Random(deviceId) {\n      // first 3 digits \n      const base = 3470000000; // compute phone number\n\n      const randomNum = Math.floor(Math.random() * 10000000) + base; // convert to string\n\n      this.rnd = randomNum.toString(); // Add hyphens \n      //this.rnd = this.rnd.substring(0,3) + '-' + this.rnd.substring(3,6) + '-' + this.rnd.substring(6);\n      //return this.rnd\n\n      let myContainer = document.getElementById('phoneNumber'); // Add to the input field\n\n      myContainer.value = this.rnd;\n      this.update(deviceId, this.rnd);\n    }\n\n  }\n\n  DevicesComponentComponent.ɵfac = function DevicesComponentComponent_Factory(t) {\n    return new (t || DevicesComponentComponent)(i0.ɵɵdirectiveInject(i1.DeviceService), i0.ɵɵdirectiveInject(i2.NgbModal));\n  };\n\n  DevicesComponentComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DevicesComponentComponent,\n    selectors: [[\"app-devices-component\"]],\n    viewQuery: function DevicesComponentComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.deviceNumber = _t.first);\n      }\n    },\n    decls: 13,\n    vars: 1,\n    consts: [[1, \"initpage\"], [1, \"container-fluid\", \"DevicesPage\"], [1, \"table\", \"table-bordered\"], [1, \"thead-dark\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-dark\", 3, \"click\"], [\"id\", \"EditButton\", 1, \"EditButtonClass\"], [\"EditDevice\", \"\"], [1, \"modal-header\"], [\"id\", \"modal-basic-title\", 1, \"modal-title\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"close\", 3, \"click\"], [\"aria-hidden\", \"true\"], [1, \"modal-body\"], [1, \"form-group\"], [\"for\", \"id\"], [1, \"input-group\"], [\"type\", \"number\", \"id\", \"id\", \"name\", \"device.deviceId\", 1, \"form-control\", 3, \"ngModel\", \"readonly\", \"ngModelChange\"], [\"for\", \"phoneNumber\"], [\"type\", \"number\", \"id\", \"phoneNumber\", \"name\", \"device.deviceNumber\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"change\", \"\"], [1, \"modal-footer\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-dark\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-outline-dark\", 3, \"click\"]],\n    template: function DevicesComponentComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"table\", 2);\n        i0.ɵɵelementStart(3, \"thead\", 3);\n        i0.ɵɵelementStart(4, \"tr\");\n        i0.ɵɵelementStart(5, \"td\");\n        i0.ɵɵtext(6, \"Device #\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"td\");\n        i0.ɵɵtext(8, \"Phone Number\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"td\");\n        i0.ɵɵtext(10, \"Manage\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"tbody\");\n        i0.ɵɵtemplate(12, DevicesComponentComponent_tr_12_Template, 11, 2, \"tr\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngForOf\", ctx.deviceList);\n      }\n    },\n    directives: [i3.NgForOf, i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.NgForm, i4.NumberValueAccessor, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel],\n    styles: [\".DevicesPage[_ngcontent-%COMP%]{text-align:center;border:1px solid gray;background-color:#f6f6f6;padding:35px;position:-webkit-sticky;position:sticky;width:1300px;height:700px;border-radius:18px;font-size:x-large}.initpage[_ngcontent-%COMP%]{background-color:transparent;padding-top:50px;padding-bottom:100px}@media screen and (max-width: 1300px){.DevicesPage[_ngcontent-%COMP%]{width:auto;height:auto}.initpage[_ngcontent-%COMP%]{padding-top:auto;padding-bottom:600px}}\"]\n  });\n  return DevicesComponentComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}